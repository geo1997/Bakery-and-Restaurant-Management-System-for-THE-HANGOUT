package Employee.Attendance;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import Employee.PermEmpSal.EmpSal;
import Employee.EmpDetails.EmDet;
import Employee.Emp_leaves.EmpLeaves;
import Employee.Dashboard.EmployeeManagement;
import Employee.Report_emp.EmployeeManagamentDash_Reports;
import Employee.TempEmpSal.TempEmpSal;
import Hangout.Home.Home;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
//import ui.Home;

/**
 *
 * @author BEYOND
 */
public class Attendance extends javax.swing.JFrame {

    /**
     * Creates new form MenuManagement
     */
    public Attendance() {
        initComponents();
        jPanel1.setBackground(new Color(255, 102, 0, 180));
        jPanel2.setBackground(new Color(0, 0, 0, 150));
        jLabel1.setBackground(new Color(0, 0, 0, 100));
        //jPanel3.setBackground(new Color(255,102,0,180));
        //jPanel3.setBackground(new Color(255, 102, 0, 180));
        jPanel4.setBackground(new Color(255, 102, 0, 180));
        jPanel5.setBackground(new Color(255, 102, 0, 180));

        Emp_Det.setBackground(new Color(255, 102, 0, 180));
        jButton5.setBackground(new Color(255, 102, 0, 180));
        jButton7.setBackground(new Color(255, 102, 0, 180));
        jButton6.setBackground(new Color(255, 102, 0, 180));
        jButton9.setBackground(new Color(255, 102, 0, 180));
        jButton10.setBackground(new Color(255, 102, 0, 180));
        //jTextField7.setBackground(new Color(255, 102, 0, 180));
        depCombo.setBackground(new Color(255, 102, 0, 180));
        
        jButton7.setBackground(Color.white);

        jTable1.getTableHeader().setDefaultRenderer(new HeaderColor());
        attentable.getTableHeader().setDefaultRenderer(new HeaderColor());

        this.setExtendedState(MAXIMIZED_BOTH);
        
        
         logout_btn.setBackground(new Color(255, 102, 0, 180));
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");  
        LocalDateTime now = LocalDateTime.now();  
         DateLabel.setText(dtf.format(now));
         
         
         fillClientJtable(jTable1);
         fillattendance(attentable);
    }

      public Connection getConnection(){
        Connection conn = null;
        
        String db = "hangout";
        String url = "jdbc:mysql://localhost:3306/"+db;
        String username = "root";
        String password = "root";
        
        try {
            conn = DriverManager.getConnection(url,username,password);
            return conn;
        } catch (SQLException e) {
            return null;
        }
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        Emp_Det = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        logout_btn = new javax.swing.JButton();
        userwelcomejlabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        depCombo = new javax.swing.JComboBox<>();
        DateLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        attentable = new javax.swing.JTable()
        {
            public Component prepareRenderer (TableCellRenderer renderer, int rowIndex, int columnIndex){
                Component component = super.prepareRenderer(renderer, rowIndex, columnIndex);

                Object value = getModel().getValueAt(rowIndex, columnIndex);

                if(columnIndex ==1){
                    if(value.equals("Present")){
                        //component.setBackground(Color.GREEN);
                        component.setForeground(Color.GREEN);
                        component.setBackground(Color.white);
                    }
                    else if(value.equals("Absent")){
                        component.setForeground(Color.RED);
                        component.setBackground(Color.white);

                    }

                }

                else  {

                    component.setBackground(Color.white);
                    component.setForeground(Color.BLACK);
                }

                return component;
            }

        }
        ;
        jLabel18 = new javax.swing.JLabel();
        clockInbtn = new javax.swing.JButton();
        clockoutBtn = new javax.swing.JButton();
        clockoutlab = new javax.swing.JTextField();
        clcokintf = new javax.swing.JTextField();
        eidlbl = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(1920, 100));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logo.png"))); // NOI18N
        jLabel2.setToolTipText("");

        jButton10.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton10.setText("Employee Reports");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton9.setText("Temporary Employee Salary");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton6.setText("Permanenet Employee Salary");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton7.setText("Employee Attendance");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton5.setText("Leave Managment");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        Emp_Det.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        Emp_Det.setText("Employee Details");
        Emp_Det.setFocusPainted(false);
        Emp_Det.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Emp_DetMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Emp_DetMouseExited(evt);
            }
        });
        Emp_Det.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Emp_DetActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Chiller", 1, 60)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Employee Management");

        logout_btn.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        logout_btn.setText("Log Out");
        logout_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_btnActionPerformed(evt);
            }
        });

        userwelcomejlabel.setFont(new java.awt.Font("Chiller", 1, 24)); // NOI18N
        userwelcomejlabel.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(622, 622, 622)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 364, Short.MAX_VALUE)
                        .addComponent(userwelcomejlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(logout_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(Emp_Det, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(70, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel9)
                                    .addComponent(logout_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addGap(0, 12, Short.MAX_VALUE)
                                .addComponent(userwelcomejlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(73, 73, 73)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Emp_Det, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(0, 20, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 36)); // NOI18N
        jLabel8.setText("Attendance");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "First Name", "Last Name", "Type"
            }
        ));
        jTable1.setRowHeight(40);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jTable1MousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        depCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Restaurant and Bakery", "Raw material & Utility Management", "Catering & Order book", "Customer Management", "Finished products", "Function hall", "HRM" }));
        depCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                depComboActionPerformed(evt);
            }
        });

        DateLabel.setFont(new java.awt.Font("Times New Roman", 3, 45)); // NOI18N
        DateLabel.setForeground(new java.awt.Color(255, 255, 255));

        jButton1.setBackground(new java.awt.Color(0, 0, 0));
        jButton1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_attendance_mark_38px.png"))); // NOI18N
        jButton1.setText("Mark Attendance");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(depCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(353, 353, 353))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jLabel17))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 850, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 33, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(DateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(305, 305, 305))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(347, 347, 347))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(DateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(depCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(46, 46, 46))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 119, Short.MAX_VALUE))))
        );

        jButton4.setBackground(new java.awt.Color(0, 0, 0));
        jButton4.setForeground(new java.awt.Color(240, 240, 240));
        jButton4.setText("Back");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        attentable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Attendance", "ClockIn", "ClockOut", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        attentable.setRowHeight(40);
        attentable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                attentableMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(attentable);
        if (attentable.getColumnModel().getColumnCount() > 0) {
            attentable.getColumnModel().getColumn(0).setResizable(false);
            attentable.getColumnModel().getColumn(1).setResizable(false);
            attentable.getColumnModel().getColumn(2).setResizable(false);
            attentable.getColumnModel().getColumn(3).setResizable(false);
            attentable.getColumnModel().getColumn(4).setResizable(false);
        }

        clockInbtn.setBackground(new java.awt.Color(0, 0, 0));
        clockInbtn.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        clockInbtn.setForeground(new java.awt.Color(255, 255, 255));
        clockInbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_time_machine_38px.png"))); // NOI18N
        clockInbtn.setText("Clock in time");
        clockInbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockInbtnActionPerformed(evt);
            }
        });

        clockoutBtn.setBackground(new java.awt.Color(0, 0, 0));
        clockoutBtn.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        clockoutBtn.setForeground(new java.awt.Color(255, 255, 255));
        clockoutBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_future_38px.png"))); // NOI18N
        clockoutBtn.setText("Clock out time");
        clockoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clockoutBtnActionPerformed(evt);
            }
        });

        clockoutlab.setBackground(new java.awt.Color(255, 204, 102));

        clcokintf.setBackground(new java.awt.Color(255, 204, 102));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 835, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 35, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(clockoutBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(clockInbtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(70, 70, 70)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(clockoutlab, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clcokintf, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(209, 209, 209))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jLabel18))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(381, 381, 381)
                        .addComponent(eidlbl, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel18)
                .addGap(13, 13, 13)
                .addComponent(eidlbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(clockInbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clockoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                        .addComponent(clcokintf, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(clockoutlab, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(119, 119, 119))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(843, 843, 843))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(80, 80, 80))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1920, 1090);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Background.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -10, 1960, 1110);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed

         EmployeeManagamentDash_Reports rep = new EmployeeManagamentDash_Reports();
        rep.setVisible(true);
        this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed

        TempEmpSal temSal = new TempEmpSal();
        temSal.setVisible(true);
        this.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        EmpSal e = new EmpSal();
        e.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        EmpLeaves leaves = new EmpLeaves();
        leaves.setVisible(true);
        this.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void Emp_DetMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Emp_DetMouseEntered
        // TODO add your handling code here:
        Emp_Det.setBackground(Color.white);
    }//GEN-LAST:event_Emp_DetMouseEntered

    private void Emp_DetMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Emp_DetMouseExited
        // TODO add your handling code here:
        Emp_Det.setBackground(new Color(255, 102, 0, 180));
    }//GEN-LAST:event_Emp_DetMouseExited

    private void Emp_DetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Emp_DetActionPerformed

        EmDet e1 = new EmDet();
        e1.setVisible(true);
        this.setVisible(false);// TODO add your handling code here:
    }//GEN-LAST:event_Emp_DetActionPerformed

    private void clockInbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockInbtnActionPerformed
        try {
            // TODO add your handling code here:
            String updateQuery = null;
            PreparedStatement ps = null;
            Connection conn = getConnection();
            
            updateQuery="update attendance set clockin=? where atd_eid=? ";
            
            ps = conn.prepareStatement(updateQuery);
            
            ps.setString(1, clcokintf.getText());
            ps.setString(2, eidlbl.getText());
            
            
             ps.executeUpdate();
             
             DefaultTableModel model = (DefaultTableModel)attentable.getModel();
                model.setRowCount(0);
                 updatemarktbale(attentable);
                 repaint();
                 
             clockoutlab.setText(null);
             clcokintf.setText(null);
             eidlbl.setText(null);

            
        } catch (SQLException ex) {
            Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_clockInbtnActionPerformed

    private void clockoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clockoutBtnActionPerformed
        // TODO add your handling code here:
        
        try {
            // TODO add your handling code here:
            String updateQuery = null;
            PreparedStatement ps = null;
            Connection conn = getConnection();
            
            updateQuery="update attendance set clockout=? where atd_eid=? ";
            
            ps = conn.prepareStatement(updateQuery);
            
            ps.setString(1, clockoutlab.getText());
            ps.setString(2, eidlbl.getText());
            
            
             ps.executeUpdate();
             
             DefaultTableModel model = (DefaultTableModel)attentable.getModel();
                model.setRowCount(0);
                 updatemarktbale(attentable);
                 repaint();
                 
             clockoutlab.setText(null);
             clcokintf.setText(null);
             eidlbl.setText(null);

            
        } catch (SQLException ex) {
            Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_clockoutBtnActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        EmployeeManagement emp = new EmployeeManagement();
        emp.setVisible(true);
                this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void depComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_depComboActionPerformed
        // TODO add your handling code here:
 
                DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                model.setRowCount(0);
                 fillClientJtable(jTable1);
                 repaint();
        
    }//GEN-LAST:event_depComboActionPerformed

    private void logout_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_btnActionPerformed

        Home h = new Home();
        h.setVisible(true);
        this.setVisible(false);

          
          
          

        //JOptionPane.showMessageDialog(null, "You have successfully Log out");
    }//GEN-LAST:event_logout_btnActionPerformed

    
    public void updatemarktbale(JTable table){
         PreparedStatement ps;
            ResultSet rs;
            
          String sql="select atd_eid,atten,clockin,clockout,presentdate from attendance ";
          
          
        try {
            
              Connection con = getConnection();
             ps=con.prepareStatement(sql);
            
              rs=ps.executeQuery();
        
        DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
        
        Object[] row;
       
        while(rs.next()){
            row = new Object[6];
            row[0]=rs.getInt(1);
            row[1]=rs.getString(2);
            row[2]=rs.getString(3);
            row[3]=rs.getString(4);
            row[4]=rs.getString(5);
         
            
            tableModel.addRow(row);
            
        }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
        }
       
    }
    
    public void attenmarktable(JTable table){

            int rowcount=jTable1.getRowCount();
         
        for(int i=0; i<rowcount;i++){
            try {
                
                
                
                String id = String.valueOf(jTable1.getValueAt(i,0));
                int eid = Integer.parseInt(id);
                
                Connection con =getConnection();
                PreparedStatement ps = con.prepareStatement("call markatten (?)" );
                
                ps.setInt(1, eid);
                ps.executeUpdate();
                
                 //JOptionPane.showMessageDialog(null, "Marked Attendance");
                
            } catch (SQLException ex) {
                Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
            }
              
        }
       
        
         PreparedStatement ps;
            ResultSet rs;
            
          String sql="select atd_eid,atten,clockin,clockout,presentdate from attendance where atten not in('absent') and  presentdate=? ";
          
          
        try {
            
              Connection con = getConnection();
             ps=con.prepareStatement(sql);
             
               DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy/MM/dd");  
             LocalDateTime now = LocalDateTime.now(); 
            
              ps.setString(1,dtf.format(now));
             
              rs=ps.executeQuery();
        
        DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
        
        Object[] row;
       
        while(rs.next()){
            row = new Object[6];
            row[0]=rs.getInt(1);
            row[1]=rs.getString(2);
            row[2]=rs.getString(3);
            row[3]=rs.getString(4);
            row[4]=rs.getString(5);
         
            
            tableModel.addRow(row);
            
        }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
        }
       
      

                 DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
                model.setRowCount(0);
          
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            PreparedStatement ps;
            ResultSet rs,rs1;
            
            Connection conn = getConnection();
            
           for (int row = 0; row < jTable1.getRowCount(); row++){
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
         String selected = model.getValueAt(row, 0).toString();
         int sel = Integer.parseInt(selected);
         
           String sql = "select atd_eid, presentdate "
                    + "from attendance "
                    + "where atd_eid=? ";
           
               System.out.println(sel);
          ps= conn.prepareStatement(sql);
          ps.setInt(1, sel);
            rs = ps.executeQuery();
         
                
            
            if(rs.next()){
                
                int id = rs.getInt("atd_eid");
                
                String dbdate = rs.getString("presentdate");
                DateTimeFormatter dtf = DateTimeFormatter.ofPattern("yyyy-MM-dd");  
                LocalDateTime now = LocalDateTime.now();  
                
                if(dbdate.equals(dtf.format(now)) && id==sel){
                     //JOptionPane.showMessageDialog(null, "Cannot Mark Attendance Twice For a Day");
                }
                
              
           }    else{
                    attenmarktable(attentable);
                } 
          
          }
            
          
        
            //fillattendance(attentable);
        } catch (SQLException ex) {
            Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MousePressed
        // TODO add your handling code here:
        
          try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
            int index = jTable1.getSelectedRow();
            
            String Table_click=(model.getValueAt(index, 0).toString());
            
            String sql="call absentatten(?) ";
            
            Connection conn = getConnection();
            PreparedStatement ps = conn.prepareStatement(sql);
            
            
             ps.setString(1, Table_click);      
             
               ps.executeUpdate();
            
              JOptionPane.showMessageDialog(null, "Marked Absent");
              
              
              fillattendance(attentable);
              
              ((DefaultTableModel)jTable1.getModel()).removeRow(index);
            
        } catch (SQLException ex) {
            Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jTable1MousePressed

    private void attentableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_attentableMousePressed
        try {
            // TODO add your handling code here:
            DefaultTableModel model = (DefaultTableModel)attentable.getModel();
            
            int index = attentable.getSelectedRow();
            
            String Table_click=(model.getValueAt(index, 0).toString());
            
            String sql = " select atd_eid,clockin,clockout from attendance where atd_eid =? ";
            
            Connection conn = getConnection();
            
            PreparedStatement ps = conn.prepareStatement(sql);
            ps.setString(1, Table_click);
            
            
            ResultSet rs = ps.executeQuery();
            
            if(rs.next()){
                int id = rs.getInt("atd_eid");
                eidlbl.setText(String.valueOf(id));
                eidlbl.setVisible(false);
                String clockin=rs.getString("clockin");
                clcokintf.setText(clockin);
                String clockout=rs.getString("clockout");
                clockoutlab.setText(clockout);
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        repaint();
    }//GEN-LAST:event_attentableMousePressed

    
    
    public void fillattendance (JTable table){
        
        try {
            PreparedStatement ps;
            ResultSet rs;
            Connection con = getConnection();
            
            
             
        
        
            
            String sql ="Select atd_eid,atten,clockin,clockout,presentdate from attendance order by presentdate ";
            
           
        
            
            ps=con.prepareStatement(sql);
            
           
             rs=ps.executeQuery();
            DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
             Object[] row;
                    while(rs.next()){
                    row = new Object[6];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                    row[3]=rs.getString(4);
                    row[4]=rs.getString(5);
                    tableModel.addRow(row);
               }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Attendance.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }
    
    
     public void fillClientJtable(JTable table){
    
    //String valToSearch=tfSearch.getText();
    PreparedStatement ps;
    ResultSet rs;
     Connection con = getConnection();
    if(depCombo.getSelectedItem().equals("Restaurant and Bakery")){
         String selectQuery = "Select id,fname,lname,type from employee where department = 'Restaurant and Bakery' ";
         try {
                    ps=con.prepareStatement(selectQuery);
                    rs=ps.executeQuery();
                    DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
                    Object[] row;
                    while(rs.next()){
                    row = new Object[6];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                    row[3]=rs.getString(4);
                    tableModel.addRow(row);
               }
            } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
            }
    }
     else
      if(depCombo.getSelectedItem().equals("Raw material & Utility Management")){
         String selectQuery = "Select id,fname,lname,type from employee where department = 'Raw material & Utility Management' ";
         try {
                    ps=con.prepareStatement(selectQuery);
                    rs=ps.executeQuery();
                    DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
                    Object[] row;
                    while(rs.next()){
                    row = new Object[6];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                   row[3]=rs.getString(4);
                    tableModel.addRow(row);
               }
            } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
      else
       if(depCombo.getSelectedItem().equals("Catering & Order book")){
         String selectQuery = "Select id,fname,lname,type from employee  where department = 'Catering & Order book' ";
         try {
                    ps=con.prepareStatement(selectQuery);
                    rs=ps.executeQuery();
                    DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
                    Object[] row;
                    while(rs.next()){
                    row = new Object[6];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                    row[3]=rs.getString(4);
                    tableModel.addRow(row);
               }
            } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
      else
         if(depCombo.getSelectedItem().equals("Customer Management")){
         String selectQuery = "Select id,fname,lname,type from employee where department = 'Customer Management' ";
         try {
                    ps=con.prepareStatement(selectQuery);
                    rs=ps.executeQuery();
                    DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
                    Object[] row;
                    while(rs.next()){
                    row = new Object[6];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                    row[3]=rs.getString(4);
                    tableModel.addRow(row);
               }
            } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
     else
         if(depCombo.getSelectedItem().equals("Finished products")){
         String selectQuery = "Select id,fname,lname,type from employee  where department = 'Finished products' ";
         try {
                    ps=con.prepareStatement(selectQuery);
                    rs=ps.executeQuery();
                    DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
                    Object[] row;
                    while(rs.next()){
                    row = new Object[6];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                    row[3]=rs.getString(4);
                    tableModel.addRow(row);
               }
            } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
       else
         if(depCombo.getSelectedItem().equals("Finished products")){
         String selectQuery = "Select id,fname,lname,type from employee  where department = 'Finished products' ";
         try {
                    ps=con.prepareStatement(selectQuery);
                    rs=ps.executeQuery();
                    DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
                    Object[] row;
                    while(rs.next()){
                    row = new Object[6];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                    row[3]=rs.getString(4);
                    tableModel.addRow(row);
               }
            } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
          else
         if(depCombo.getSelectedItem().equals("Function hall")){
         String selectQuery = "Select id,fname,lname,type  from employee  where department = 'Function hall' ";
         try {
                    ps=con.prepareStatement(selectQuery);
                    rs=ps.executeQuery();
                    DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
                    Object[] row;
                    while(rs.next()){
                    row = new Object[6];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                    row[3]=rs.getString(4);
               
                    tableModel.addRow(row);
               }
            } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
      else
         if(depCombo.getSelectedItem().equals("HRM")){
         String selectQuery = "Select id,fname,lname,type from employee  where department = 'HRM' ";
         try {
                    ps=con.prepareStatement(selectQuery);
                    rs=ps.executeQuery();
                    DefaultTableModel tableModel = (DefaultTableModel)table.getModel();
                    Object[] row;
                    while(rs.next()){
                    row = new Object[7];
                    row[0]=rs.getInt(1);
                    row[1]=rs.getString(2);
                    row[2]=rs.getString(3);
                    row[3]=rs.getString(4);
                    tableModel.addRow(row);
               }
            } catch (SQLException ex) {
            Logger.getLogger(EmpLeaves.class.getName()).log(Level.SEVERE, null, ex);
            }
      }
       
      
 }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Attendance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Attendance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel DateLabel;
    private javax.swing.JButton Emp_Det;
    private javax.swing.JTable attentable;
    private javax.swing.JTextField clcokintf;
    private javax.swing.JButton clockInbtn;
    private javax.swing.JButton clockoutBtn;
    private javax.swing.JTextField clockoutlab;
    private javax.swing.JComboBox<String> depCombo;
    private javax.swing.JLabel eidlbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton logout_btn;
    public static javax.swing.JLabel userwelcomejlabel;
    // End of variables declaration//GEN-END:variables
static public class HeaderColor extends DefaultTableCellRenderer {

        public HeaderColor() {
            setOpaque(true);
        }

        public Component getTableCellRendererComponent(JTable jTable1, Object value, boolean selected, boolean foused, int row, int column) {
            super.getTableCellRendererComponent(jTable1, value, selected, foused, row, column);
            setBackground(new java.awt.Color(255, 102, 0, 180));
            setFont(new Font("Calibri", Font.BOLD, 20));

            return this;
        }

    }

}
