package COB.order;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import COB.order.*;
import Employee.Report_emp.Report_emp;
import Hangout.Home.Home;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
//import ui.Home;

/**
 *
 * @author BEYOND
 */
public class Reports extends javax.swing.JFrame {

    /**
     * Creates new form MenuManagement
     */
    
    Connection conn=null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    
    public Reports() {
        initComponents();
        jPanel1.setBackground(new Color(255,102,0,180));
        jPanel2.setBackground(new Color(0,0,0,150));
        jLabel1.setBackground(new Color (0,0,0,100));
        jPanel4.setBackground(new Color(255,102,0,180));
        jPanel5.setBackground(new Color(255,102,0,180));
        jTable2.getTableHeader().setDefaultRenderer(new HeaderColor());   
        this.setExtendedState(MAXIMIZED_BOTH);
        jButton6.setBackground(Color.WHITE);
        fillTable();
        calTot();
       }
    
    public Connection getMysqlConnection(){
        Connection conn = null;
        
        String db="hangout";
        String url = "jdbc:mysql://localhost:3306/hangout";
        String username = "root";
        String password = "root";
        
        try{
            conn=DriverManager.getConnection("jdbc:mysql://localhost:3306/hangout", "root", "root");
            if(conn!=null){
                System.out.println("Connection successful");
                return conn;
            }
        }catch(Exception e){
            System.out.println("Not connected to db");
        }
        return conn;               
    }
    
        //show / add the the data to table
    public ArrayList<ReportBean> getAllReportData(){
        ArrayList<ReportBean> al=null;
        al=new ArrayList<ReportBean>();
        try{
            Connection con=getMysqlConnection();
           String qry="select * from cat_reports";
           Statement st=con.createStatement();
           ResultSet rs=st.executeQuery(qry);
           ReportBean report;           
           while(rs.next()){
             report=new ReportBean(rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6));
             al.add(report);

                
           }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "Error in getAllReportData()"+e);
            return al;
        }
        return al;
    } 
    
    //fill the jTable1 with data
    public void fillTable(){
        ArrayList<ReportBean> al=getAllReportData();
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        model.setRowCount(0); // Empty/clear the table
        Object[] row=new Object[6];
        for (int i = 0; i < al.size(); i++) {
            row[0]=al.get(i).getCatID();
            row[1]=al.get(i).getPackID();
            row[2]=al.get(i).getCus_Name();
            row[3]=al.get(i).getEv_date();
            row[4]=al.get(i).getPay_date();
            row[5]=al.get(i).getTotal();
            model.addRow(row);
        }                
    }
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        logout_btn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        search = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        report_btn = new javax.swing.JButton();
        jYearChooser1 = new com.toedter.calendar.JYearChooser();
        jLabel10 = new javax.swing.JLabel();
        lblTot = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        submit1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextPane();
        clear = new javax.swing.JButton();
        print = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setPreferredSize(new java.awt.Dimension(1920, 100));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/COB/order/Logo.png"))); // NOI18N
        jLabel2.setToolTipText("");

        jLabel4.setFont(new java.awt.Font("Chiller", 1, 60)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Catering");

        jButton6.setBackground(new java.awt.Color(255, 102, 0));
        jButton6.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton6.setText("Reports");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(255, 102, 0));
        jButton7.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton7.setText("Catering Management");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(255, 102, 0));
        jButton8.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        jButton8.setText("Invoice");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        logout_btn.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        logout_btn.setText("Log Out");
        logout_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logout_btnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(540, 540, 540)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 630, Short.MAX_VALUE)
                        .addComponent(logout_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(342, 342, 342)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(logout_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton7)
                            .addComponent(jButton8)
                            .addComponent(jButton6))))
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Reports");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Select Year");

        search.setBackground(new java.awt.Color(255, 204, 102));
        search.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        search.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        search.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        search.setPreferredSize(new java.awt.Dimension(308, 43));
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchKeyReleased(evt);
            }
        });

        jTable2.setBackground(new java.awt.Color(240, 240, 240));
        jTable2.setFont(new java.awt.Font("Calibri", 0, 18)); // NOI18N
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Catering ID", "Package ID", "Customer Name", "Event Date", "Paid Date", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.setRowHeight(40);
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        report_btn.setBackground(new java.awt.Color(0, 0, 0));
        report_btn.setForeground(new java.awt.Color(240, 240, 240));
        report_btn.setText("Generate Report");
        report_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                report_btnActionPerformed(evt);
            }
        });

        jYearChooser1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jYearChooser1MouseReleased(evt);
            }
        });
        jYearChooser1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jYearChooser1KeyReleased(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_search_38px.png"))); // NOI18N
        jLabel10.setText("Search");

        lblTot.setText("jLabel5");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(257, 257, 257)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(356, 356, 356)
                        .addComponent(report_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(152, 152, 152)
                        .addComponent(lblTot)))
                .addContainerGap(39, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addGap(34, 34, 34)
                .addComponent(jYearChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(362, 362, 362))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(39, 39, 39)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jYearChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(report_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTot))
                .addGap(28, 28, 28))
        );

        jButton5.setBackground(new java.awt.Color(0, 0, 0));
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/left arrow.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        submit1.setBackground(new java.awt.Color(255, 255, 255));
        submit1.setFont(new java.awt.Font("Times New Roman", 3, 18)); // NOI18N
        submit1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8-ok-48.png"))); // NOI18N
        submit1.setText("Submit");
        submit1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submit1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                submit1MouseExited(evt);
            }
        });
        submit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit1ActionPerformed(evt);
            }
        });

        jTextArea1.setEditable(false);
        jScrollPane3.setViewportView(jTextArea1);

        clear.setBackground(new java.awt.Color(0, 0, 0));
        clear.setForeground(new java.awt.Color(240, 240, 240));
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_broom_38px.png"))); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        print.setBackground(new java.awt.Color(0, 0, 0));
        print.setForeground(new java.awt.Color(240, 240, 240));
        print.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/icons8_print_30px.png"))); // NOI18N
        print.setText("Print");
        print.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(1003, 1003, 1003)
                        .addComponent(submit1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 806, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(submit1)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clear, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(print, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 903, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(707, 707, 707)
                                .addComponent(jLabel3)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(83, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1920, 1090);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/COB/order/Background.jpg"))); // NOI18N
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, -10, 1960, 1110);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed

    }//GEN-LAST:event_searchActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        new CateringMenu().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        new Order().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        new OrderBill().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyReleased
        // TODO add your handling code here:
                        ArrayList<ReportBean> al=null;
        al=new ArrayList<ReportBean>();
        String val=search.getText().toString();
        String val2=search.getText().toString();
        
       try{
            Connection con=getMysqlConnection();
           String qry="select * from cat_reports where cus_Name like '%"+val+"%' OR cateringID like '%"+val2+"%'";
           Statement st=con.createStatement();
           ResultSet rs=st.executeQuery(qry);
           ReportBean report;           
           while(rs.next()){
             report=new ReportBean(rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6));
             al.add(report);
                
           }
           if (st!=null) {
                    st.close();
                }
           if (con!=null) {
                    con.close();
                }
                
                
           //search ed teachers to be added to datatable
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        model.setRowCount(0); // Empty/clear the table
        Object[] row=new Object[6];
        for (int i = 0; i < al.size(); i++) {
            row[0]=al.get(i).getCatID();
            row[1]=al.get(i).getPackID();
            row[2]=al.get(i).getCus_Name();
            row[3]=al.get(i).getEv_date();
            row[4]=al.get(i).getPay_date();
            row[5]=al.get(i).getTotal();
            model.addRow(row);
        }               
           
           
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, "Error at jTextField1_searchKeyReleased "+e);
       }
    }//GEN-LAST:event_searchKeyReleased

    private void logout_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logout_btnActionPerformed

        Home h = new Home();
        h.setVisible(true);
        this.setVisible(false);

        JOptionPane.showMessageDialog(null, "You have successfully Log out");
    }//GEN-LAST:event_logout_btnActionPerformed

    private void submit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_submit1ActionPerformed

    private void submit1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submit1MouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_submit1MouseExited

    private void submit1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submit1MouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_submit1MouseEntered

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseClicked

    private void report_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_report_btnActionPerformed

       ArrayList<ReportBean> al=null;
        al=new ArrayList<ReportBean>();
        String year1=String.valueOf(jYearChooser1.getYear());
        
       try{
            Connection con=getMysqlConnection();
           String sql="select * from cat_reports where Year(pay_date)=? ";
           PreparedStatement st=con.prepareStatement(sql);
           
           st.setString(1, year1);
           ResultSet rs=st.executeQuery();
           
           ReportBean report;           
           while(rs.next()){
             report=new ReportBean(rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6));
             al.add(report);
                
           }
           if (st!=null) {
                    st.close();
                }
           if (con!=null) {
                    con.close();
                }
                
                
           //search ed teachers to be added to datatable
        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
        model.setRowCount(0); // Empty/clear the table
        Object[] row=new Object[6];
        for (int i = 0; i < al.size(); i++) {
            row[0]=al.get(i).getCatID();
            row[1]=al.get(i).getPackID();
            row[2]=al.get(i).getCus_Name();
            row[3]=al.get(i).getEv_date();
            row[4]=al.get(i).getPay_date();
            row[5]=al.get(i).getTotal();
            model.addRow(row);
        }                 
           
           
       }catch(Exception e){
           JOptionPane.showMessageDialog(null, "Error "+e);
       } 
        
        
        
        
                jTextArea1.setText("\t\t\t\t\tThe Hangout\n");

         //System.out.println(month);
          String year=String.valueOf(jYearChooser1.getYear());
         jTextArea1.setFont(new Font("Arial Black", Font.BOLD, 14));
         
            jTextArea1.setText(jTextArea1.getText()+"\t\t\t\t            Catering Report "+      " \n");     
            jTextArea1.setText(jTextArea1.getText()+"\t\t\t\t\t     "+year+" \n\n\n");
            
            jTextArea1.setText(jTextArea1.getText()+"\t                            Month                                     Total Income\n\n");

           PreparedStatement ps;
            ResultSet rs;
            
            int rowcount=jTable2.getRowCount();
            
             //SimpleDateFormat dateFormatyear = new SimpleDateFormat("yyyy");
             //String year=dateFormatyear.format(jYearChooser1.getYear());
            
               
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='January'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='February'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='March'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='April'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='May '" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='June'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='July'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='August'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='September'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='October'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='November'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             try {
                String sql="SELECT Month,Total FROM monthly_rep WHERE Year=? and Month='December'" ;
                //System.out.println(month);
                
                Connection con = getMysqlConnection();
                ps=con.prepareStatement(sql);
                
                ps.setString(1, year);


                
                rs=ps.executeQuery();
                

                
                if(rs.next()){
                    String month = rs.getString("Month");
                     jTextArea1.setText(jTextArea1.getText()+"\t                          "+month+"                                     ");
                     
                     int tot = rs.getInt("Total");
                      jTextArea1.setText(jTextArea1.getText()+tot+" \n");
                    
                }
                
                
                
                
            } catch (SQLException ex) {
                Logger.getLogger(Report_emp.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             
             
             String total=String.valueOf(lblTot.getText());
             
             jTextArea1.setText(jTextArea1.getText()+"\n\n\n\t\t"+"Income for "+year+"    :  "+total+" \n");
             
             
    }//GEN-LAST:event_report_btnActionPerformed

      public void calTot(){
     
          try{
            Connection conn = getMysqlConnection();
            String qry="select sum(total)as tot from monthly_rep";
            PreparedStatement ps;
            ps = conn.prepareStatement(qry);
            ResultSet rs=ps.executeQuery();
            
            if(rs.next()){
                lblTot.setVisible(false);
               lblTot.setText(rs.getString("tot"));
                repaint();
            }
                
               
        }
        catch(Exception e){}
     }
    
    private void jYearChooser1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jYearChooser1MouseReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jYearChooser1MouseReleased

    private void jYearChooser1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jYearChooser1KeyReleased
//        // TODO add your handling code here:
//        ArrayList<ReportBean> al=null;
//        al=new ArrayList<ReportBean>();
//        String year1=String.valueOf(jYearChooser1.getYear());
//        
//       try{
//            Connection con=getMysqlConnection();
//           String sql="select * from cat_reports where Year(pay_date)=?";
//           PreparedStatement st=con.prepareStatement(sql);
//           
//           st.setString(1, year1);
//           ResultSet rs=st.executeQuery(sql);
//           
//           ReportBean report;           
//           while(rs.next()){
//             report=new ReportBean(rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6));
//             al.add(report);
//                
//           }
//           if (st!=null) {
//                    st.close();
//                }
//           if (con!=null) {
//                    con.close();
//                }
//                
//                
//           //search ed teachers to be added to datatable
//        DefaultTableModel model=(DefaultTableModel)jTable2.getModel();
//        model.setRowCount(0); // Empty/clear the table
//        Object[] row=new Object[6];
//        for (int i = 0; i < al.size(); i++) {
//            row[0]=al.get(i).getCatID();
//            row[1]=al.get(i).getPackID();
//            row[2]=al.get(i).getCus_Name();
//            row[3]=al.get(i).getEv_date();
//            row[4]=al.get(i).getPay_date();
//            row[5]=al.get(i).getTotal();
//            model.addRow(row);
//        }                 
//           
//           
//       }catch(Exception e){
//           JOptionPane.showMessageDialog(null, "Error at jTextField1_searchKeyReleased "+e);
//       }
        
    }//GEN-LAST:event_jYearChooser1KeyReleased

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
        jTextArea1.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void printActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printActionPerformed
        try {
            // TODO add your handling code here:
            jTextArea1.print();
        } catch (PrinterException ex) {
            Logger.getLogger(Reports.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_printActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Reports.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Reports().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clear;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextPane jTextArea1;
    private com.toedter.calendar.JYearChooser jYearChooser1;
    private javax.swing.JLabel lblTot;
    private javax.swing.JButton logout_btn;
    private javax.swing.JButton print;
    private javax.swing.JButton report_btn;
    private javax.swing.JTextField search;
    private javax.swing.JButton submit1;
    // End of variables declaration//GEN-END:variables

    static public class HeaderColor extends DefaultTableCellRenderer{
        public HeaderColor(){
            setOpaque(true);
        }
        public Component getTableCellRendererComponent(JTable jTable1,Object value,boolean selected,boolean foused,int row,int column){
            super.getTableCellRendererComponent(jTable1, value, selected, foused, row, column);
            setBackground(new java.awt.Color(255,102,0,180));
            setFont(new Font("Calibri",Font.BOLD,28));
            return this;
        }
    }
}
